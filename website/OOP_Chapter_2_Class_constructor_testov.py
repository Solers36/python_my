"""
Помимо конструктора объектов в языках программирования есть обратный ему метод – деструктор. 
Он вызывается, когда объект не создается, а уничтожается.

В языке программирования Python объект уничтожается, когда исчезают все связанные с ним 
переменные или им присваивается другое значение, в результате чего связь со старым объектом 
теряется. Удалить переменную можно с помощью команды языка del.

В классах Python функцию деструктора выполняет метод __del__().

Напишите программу по следующему описанию:

1. Есть класс Person, конструктор которого принимает три параметра (не учитывая self) – имя, фамилию 
и квалификацию специалиста. Квалификация имеет значение заданное по умолчанию, равное единице.

2. У класса Person есть метод, который возвращает строку, включающую в себя всю информацию о сотруднике.

3. Класс Person содержит деструктор, который выводит на экран фразу "До свидания, мистер …" (вместо 
троеточия должны выводиться имя и фамилия объекта).

4. В основной ветке программы создайте три объекта класса Person. Посмотрите информацию о сотрудниках 
и увольте самое слабое звено.

5. В конце программы добавьте функцию input(), чтобы скрипт не завершился сам, пока не будет нажат Enter. 
Иначе вы сразу увидите как удаляются все объекты при завершении работы программы.
"""

class Person:
    def __init__(self, name, surname, qualification=1):
        self.name = name
        self.surname = surname
        self.qualification = qualification

    def __del__(self):
        print("До свидания, мистер {0.name} {0.surname}.".format(self))

    def print_out(self):
        print("{0.name} {0.surname} - {0.qualification} qualification.".format(self))

employee_1 = Person("Bob", "Kim", 4)
employee_2 = Person("Tod", "Smit")
employee_3 = Person("Tom", "Anderson", 2)

employee_1.print_out()
employee_2.print_out()
employee_3.print_out()

del employee_2

input("Нажмите 'Enter' для закрытия программы.")


